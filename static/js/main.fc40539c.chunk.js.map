{"version":3,"sources":["components/ContactLIst/ContactList.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","redux/action-types.js","components/ContactLIst/ContactList.js","components/Form/Form.js","redux/filter/filter-actions.js","components/Filter/Filter.js","App.js","redux/contacts/contacts-reducer.js","redux/filter/filter-reducer.js","redux/store.js","index.js","components/Form/Form.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","removeContact","ContactList","contacts","useSelector","state","items","filter","dispatch","useDispatch","visibleContacts","normalizedFilter","toLowerCase","contact","includes","getVisibleContacts","className","css","list","map","listItem","btn","type","onClick","Form","onSubmit","useState","setName","setNumber","handleChange","e","currentTarget","value","form","preventDefault","label","placeholder","pattern","title","required","onChange","input","Filter","App","contactsReducer","createReducer","find","alert","filterReducer","action","rootReducer","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc40539c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1QXPz\",\"listItem\":\"ContactList_listItem__3HGn-\",\"btn\":\"ContactList_btn__2UkKU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2h1AF\",\"input\":\"Filter_input__3XehC\"};","import { ADD_CONTACT, REMOVE_CONTACT } from \"../action-types\";\nimport { createAction } from \"@reduxjs/toolkit\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport const addContact = createAction(ADD_CONTACT, (name, number) => ({\n  payload: { name, number, id: uuidv4() },\n}));\n\nexport const removeContact = createAction(REMOVE_CONTACT);\n","export const ADD_CONTACT = \"App/addContact\";\nexport const FILTER = \"App/filter\";\nexport const REMOVE_CONTACT = \"App/removeContact\";\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { removeContact } from \"../../redux/contacts/contacts-actions\";\r\nimport css from \"./ContactList.module.css\";\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector((state) => state.items);\r\n  const filter = useSelector((state) => state.filter);\r\n  const dispatch = useDispatch();\r\n\r\n  function getVisibleContacts() {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n\r\n  const visibleContacts = getVisibleContacts();\r\n\r\n  return (\r\n    <ul className={css.list}>\r\n      {visibleContacts &&\r\n        visibleContacts.map(({ id, name, number }) => (\r\n          <li className={css.listItem} key={id}>\r\n            {`${name}: ${number}`}\r\n            <button\r\n              className={css.btn}\r\n              type=\"button\"\r\n              onClick={() => dispatch(removeContact(id))}\r\n            >\r\n              delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n    </ul>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { addContact } from \"../../redux/contacts/contacts-actions\";\r\nimport css from \"./Form.module.css\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nexport default function Form({ onSubmit }) {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addContact(name, number));\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className={css.form} onSubmit={handleSubmit}>\r\n      <label className={css.label}>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Steve Jobs\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChange}\r\n          value={name}\r\n          className={css.input}\r\n        />\r\n      </label>\r\n      <label className={css.label}>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          placeholder=\"+38(0XX)-XXX-XX-XX\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChange}\r\n          value={number}\r\n          className={css.input}\r\n        />\r\n      </label>\r\n      <button className={css.btn} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import { FILTER } from \"../action-types\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nexport const filter = createAction(FILTER);\n","import css from \"./Filter.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { filter } from \"../../redux/filter/filter-actions\";\r\n\r\nexport default function Filter() {\r\n  const value = useSelector((state) => state.filter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label className={css.label}>\r\n      Filter\r\n      <input\r\n        className={css.input}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        placeholder=\"Enter contact name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        value={value}\r\n        onChange={(e) => dispatch(filter(e.currentTarget.value))}\r\n      ></input>\r\n    </label>\r\n  );\r\n}\r\n","import ContactList from \"./components/ContactLIst/ContactList\";\r\nimport Form from \"./components/Form/Form\";\r\nimport Filter from \"./components/Filter/Filter\";\r\nimport css from \"./App.css\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <h1 className={css}>Phonebook</h1>\r\n      <Form />\r\n      <h2 className={css}>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </>\r\n  );\r\n}\r\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { addContact, removeContact } from \"./contacts-actions\";\n\nexport const contactsReducer = createReducer([], {\n  [addContact]: (state, { payload }) => {\n    let duplicate = state.find((contact) => contact.name === payload.name);\n    if (duplicate) {\n      alert(\"Такой контакт уже существует!\");\n      return state;\n    } else {\n      return [...state, payload];\n    }\n  },\n  [removeContact]: (state, { payload }) =>\n    state.filter((contact) => contact.id !== payload),\n});\n","import { filter } from \"./filter-actions\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n\nexport const filterReducer = createReducer(\"\", {\n  [filter]: (state, action) => action.payload,\n});\n","import { createStore, combineReducers } from \"redux\";\r\nimport { contactsReducer } from \"./contacts/contacts-reducer\";\r\nimport { filterReducer } from \"./filter/filter-reducer\";\r\n\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst rootReducer = combineReducers({\r\n  items: contactsReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport \"../node_modules/modern-normalize/modern-normalize.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__30vLo\",\"label\":\"Form_label__3Fj5X\",\"btn\":\"Form_btn__3cOap\",\"input\":\"Form_input__2cZV0\"};"],"sourceRoot":""}